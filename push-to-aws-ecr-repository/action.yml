name: 'Push to AWS ECR repositories'
description: 'Push multiple images to AWS ECR repositories'
inputs:
  awsAccessKey:
    description: 'AWS Access Key ID'
    required: true
  awsSecretKey: 
    description: 'AWS Secret Access Key'
    required: true
  awsRegion: 
    description: 'AWS Region'
    required: true  
  repositories:
    description: 'Comma-separated list of repository names'
    required: true
  localTag: 
    description: 'Tag of locally built images. Images with this tag must be pre-built.'
    required: true
  targetTag: 
    description: 'Target tag for all ECR repositories'
    required: true
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.awsAccessKey }}
        aws-secret-access-key: ${{ inputs.awsSecretKey }}
        aws-region: ${{ inputs.awsRegion }}

    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Create AWS repositories if not exist
      shell: bash
      working-directory: ${{ github.action_path }}
      run: |
        IFS=',' read -ra REPOS <<< "${{ inputs.repositories }}"
        for repo in "${REPOS[@]}"; do
          repo=$(echo "$repo" | xargs)  # trim whitespace
          aws ecr describe-repositories --repository-names "$repo" || {
            aws ecr create-repository --repository-name "$repo"
            aws ecr set-repository-policy --repository-name "$repo" --policy-text file://ecr-policy.json
          }
        done
    
    - name: Tag docker images
      env:
        registry: ${{ steps.login-ecr.outputs.registry }}
      shell: bash
      run: |
        IFS=',' read -ra REPOS <<< "${{ inputs.repositories }}"
        for repo in "${REPOS[@]}"; do
          repo=$(echo "$repo" | xargs)  # trim whitespace
          docker tag "local/$repo:${{ inputs.localTag }}" "${{ env.registry }}/$repo:${{ inputs.targetTag }}"
        done
    
    - name: Docker push
      env:
        registry: ${{ steps.login-ecr.outputs.registry }}
      shell: bash
      run: |
        IFS=',' read -ra REPOS <<< "${{ inputs.repositories }}"
        for repo in "${REPOS[@]}"; do
          repo=$(echo "$repo" | xargs)  # trim whitespace
          docker push "${{ env.registry }}/$repo:${{ inputs.targetTag }}"
        done